diff --git a/gazebo/transport/ConnectionManager.cc b/gazebo/transport/ConnectionManager.cc
index 17016a4362..4463a258ff 100644
--- a/gazebo/transport/ConnectionManager.cc
+++ b/gazebo/transport/ConnectionManager.cc
@@ -88,6 +88,12 @@ ConnectionManager::~ConnectionManager()
   this->Fini();
 }
 
+//////////////////////////////////////////////////
+ConnectionManager* ConnectionManager::Instance()
+{
+  return SingletonT<ConnectionManager>::Instance();
+}
+
 //////////////////////////////////////////////////
 bool ConnectionManager::Init(const std::string &_masterHost,
                              unsigned int _masterPort,
diff --git a/gazebo/transport/ConnectionManager.hh b/gazebo/transport/ConnectionManager.hh
index 6dc212bc13..65169d1e69 100644
--- a/gazebo/transport/ConnectionManager.hh
+++ b/gazebo/transport/ConnectionManager.hh
@@ -167,6 +167,9 @@ namespace gazebo
       /// \brief Run the manager update loop once
       private: void RunUpdate();
 
+      /// \brief Returns a pointer to the unique (static) instance
+      public: static ConnectionManager* Instance();
+
       /// \brief Condition used to trigger an update.
       private: boost::condition_variable updateCondition;
 
diff --git a/gazebo/transport/TopicManager.cc b/gazebo/transport/TopicManager.cc
index 14fa782fa4..19587fb884 100644
--- a/gazebo/transport/TopicManager.cc
+++ b/gazebo/transport/TopicManager.cc
@@ -65,6 +65,12 @@ TopicManager::~TopicManager()
 {
 }
 
+//////////////////////////////////////////////////
+TopicManager* TopicManager::Instance()
+{
+  return SingletonT<TopicManager>::Instance();
+}
+
 //////////////////////////////////////////////////
 void TopicManager::Init()
 {
diff --git a/gazebo/transport/TopicManager.hh b/gazebo/transport/TopicManager.hh
index b2adc04c8d..6c05abae6e 100644
--- a/gazebo/transport/TopicManager.hh
+++ b/gazebo/transport/TopicManager.hh
@@ -244,6 +244,9 @@ namespace gazebo
       /// \param[in] _ptr Node to process.
       public: void AddNodeToProcess(NodePtr _ptr);
 
+      /// \brief Returns a pointer to the unique (static) instance
+      public: static TopicManager* Instance();
+
       /// \brief A map of string->list of Node pointers
       typedef std::map<std::string, std::list<NodePtr> > SubNodeMap;
 

